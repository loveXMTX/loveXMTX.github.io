<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Aria2 Note</title>
    <url>/2020/06/24/Aria2-Note/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>以前一直对离线下载很感兴趣，但苦于没有大带宽、大容量，所以一直没有付诸于行动。最近一次偶然的机会，我有了一台7T、1000mbps下行带宽的服务器帐号。</p>
<p>而且我发现<a href="https://www.natfrp.com/" target="_blank" rel="noopener">sakurafrp</a>的映射服务有4-8mbps的上行带宽（实测1mb/s），<a href="https://moe.do/archives/sakurafrp_help.html" target="_blank" rel="noopener">映射教程</a>，如此机会怎能不行动呢？</p>
<a id="more"></a>

<h3 id="1-安装Aria2"><a href="#1-安装Aria2" class="headerlink" title="1.安装Aria2"></a>1.安装Aria2</h3><p>由于本人没有root权限，yum、rpm都用不了，且不认识管理员，所以选择了使用源码编译。</p>
<p>如果你用root权限，那么请参考：<a href="https://blog.csdn.net/lichenzero/article/details/80141390?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.nonecase" target="_blank" rel="noopener">Centos7 Install Aria2</a></p>
<ul>
<li>首先你需要在<a href="https://github.com/aria2/aria2/releases" target="_blank" rel="noopener">Aira2官方库</a>找到适合自己机器的版本，下载并解压它。  <a href="https://aria2.github.io/" target="_blank" rel="noopener">这里是Windows/MacOS</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#下载</span><br><span class="line">mkdir Aria2 &amp;&amp;cd Aria2</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;aria2&#x2F;aria2&#x2F;releases&#x2F;download&#x2F;release-1.35.0&#x2F;aria2-1.35.0.tar.gz</span><br><span class="line"></span><br><span class="line">#解压</span><br><span class="line">tar -xvzf 1.35.0.tar.gz</span><br><span class="line"></span><br><span class="line">#设置路径</span><br><span class="line">.&#x2F;configure --prefix&#x3D;</span><br><span class="line"></span><br><span class="line">#编译,在执行make命令前也可以先执行 make clean 命令</span><br><span class="line">make -j 4</span><br></pre></td></tr></table></figure>
<p>说一下我这里遇到的坑：1.LibXML2这个依赖库，我也是用源码装的，设置bash_profile的PATH 、CLibPath、PKG_CON_PATH之后。我编译aria2一直搜索不到libxml2，气死了。目前还没解决</p>
<h3 id="2-设置Aria2参数"><a href="#2-设置Aria2参数" class="headerlink" title="2.设置Aria2参数"></a>2.设置Aria2参数</h3><p>我实在网上下载的模板稳健aria2.conf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#在一个文件夹下新建aria2.conf、aria2.session(这个是会话文件)</span><br><span class="line">#然后进入aria2.conf 编辑</span><br><span class="line"></span><br><span class="line">## &#39;#&#39;开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##</span><br><span class="line">## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##</span><br><span class="line"></span><br><span class="line">## 文件保存相关 ##</span><br><span class="line"></span><br><span class="line"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span><br><span class="line">dir&#x3D;D:\Download</span><br><span class="line"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span><br><span class="line">disk-cache&#x3D;32M</span><br><span class="line"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span><br><span class="line"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span><br><span class="line"># falloc和trunc则需要文件系统和内核支持</span><br><span class="line"># NTFS建议使用falloc, EXT3&#x2F;4建议trunc, MAC 下需要注释此项</span><br><span class="line">file-allocation&#x3D;falloc</span><br><span class="line"># 断点续传</span><br><span class="line">continue&#x3D;true</span><br><span class="line"></span><br><span class="line">## 下载连接相关 ##</span><br><span class="line"></span><br><span class="line"># 最大同时下载任务数, 运行时可修改, 默认:5</span><br><span class="line">max-concurrent-downloads&#x3D;20</span><br><span class="line"># 同一服务器连接数, 添加时可指定, 默认:1</span><br><span class="line">max-connection-per-server&#x3D;16</span><br><span class="line"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span><br><span class="line"># 假定size&#x3D;10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span><br><span class="line">min-split-size&#x3D;10M</span><br><span class="line"># 单个任务最大线程数, 添加时可指定, 默认:5</span><br><span class="line">split&#x3D;20</span><br><span class="line"># 整体下载速度限制, 运行时可修改, 默认:0</span><br><span class="line">#max-overall-download-limit&#x3D;0</span><br><span class="line"># 单个任务下载速度限制, 默认:0</span><br><span class="line">#max-download-limit&#x3D;0</span><br><span class="line"># 整体上传速度限制, 运行时可修改, 默认:0</span><br><span class="line">#max-overall-upload-limit&#x3D;0</span><br><span class="line"># 单个任务上传速度限制, 默认:0</span><br><span class="line">#max-upload-limit&#x3D;0</span><br><span class="line"># 禁用IPv6, 默认:false</span><br><span class="line">#disable-ipv6&#x3D;true</span><br><span class="line"></span><br><span class="line">## 进度保存相关 ##</span><br><span class="line"></span><br><span class="line"># 从会话文件中读取下载任务</span><br><span class="line">input-file&#x3D;aria2.session</span><br><span class="line"># 在Aria2退出时保存&#96;错误&#x2F;未完成&#96;的下载任务到会话文件</span><br><span class="line">save-session&#x3D;aria2.session</span><br><span class="line"># 定时保存会话, 0为退出时才保存（此处需要设置，否则失去自动保存）, 需1.16.1以上版本, 默认:0 </span><br><span class="line">save-session-interval&#x3D;60</span><br><span class="line"></span><br><span class="line">## RPC相关设置 ##</span><br><span class="line"></span><br><span class="line"># 启用RPC, 默认:false</span><br><span class="line">enable-rpc&#x3D;true</span><br><span class="line"># 允许所有来源, 默认:false</span><br><span class="line">rpc-allow-origin-all&#x3D;true</span><br><span class="line"># 允许非外部访问, 默认:false</span><br><span class="line">rpc-listen-all&#x3D;true</span><br><span class="line"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span><br><span class="line">#event-poll&#x3D;select</span><br><span class="line"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span><br><span class="line">#rpc-listen-port&#x3D;6800</span><br><span class="line"></span><br><span class="line">## BT&#x2F;PT下载相关 ##</span><br><span class="line"></span><br><span class="line"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span><br><span class="line">follow-torrent&#x3D;true</span><br><span class="line"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span><br><span class="line">listen-port&#x3D;51413</span><br><span class="line"># 单个种子最大连接数, 默认:55</span><br><span class="line">#bt-max-peers&#x3D;55</span><br><span class="line"># 打开DHT功能, PT需要禁用, 默认:true</span><br><span class="line">enable-dht&#x3D;true</span><br><span class="line"># 打开IPv6 DHT功能, PT需要禁用</span><br><span class="line">#enable-dht6&#x3D;false</span><br><span class="line"># DHT网络监听端口, 默认:6881-6999</span><br><span class="line">#dht-listen-port&#x3D;6881-6999</span><br><span class="line"># 本地节点查找, PT需要禁用, 默认:false</span><br><span class="line">bt-enable-lpd&#x3D;true</span><br><span class="line"># 种子交换, PT需要禁用, 默认:true</span><br><span class="line">enable-peer-exchange&#x3D;true</span><br><span class="line"># 每个种子限速, 对少种的PT很有用, 默认:50K</span><br><span class="line">#bt-request-peer-speed-limit&#x3D;50K</span><br><span class="line"># 客户端伪装, PT需要</span><br><span class="line">peer-id-prefix&#x3D;-TR2770-</span><br><span class="line">user-agent&#x3D;Transmission&#x2F;2.77</span><br><span class="line"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span><br><span class="line">seed-ratio&#x3D;1.0</span><br><span class="line"># 强制保存会话, 即使任务已经完成, 默认:false </span><br><span class="line"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span><br><span class="line">force-save&#x3D;false</span><br><span class="line"># BT校验相关, 默认:true</span><br><span class="line">#bt-hash-check-seed&#x3D;true</span><br><span class="line"># 继续之前的BT任务时, 无需再次校验, 默认:false</span><br><span class="line">bt-seed-unverified&#x3D;true</span><br><span class="line"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span><br><span class="line">bt-save-metadata&#x3D;true</span><br><span class="line"></span><br><span class="line"># bt-tracker 更新，解决Aria2 BT下载速度慢没速度的问题</span><br><span class="line"># https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ngosang&#x2F;trackerslist&#x2F;master&#x2F;trackers_best.txt</span><br><span class="line">bt-tracker&#x3D;udp:&#x2F;&#x2F;tracker.opentrackr.org:1337&#x2F;announce,udp:&#x2F;&#x2F;p4p.arenabg.com:1337&#x2F;announce,udp:&#x2F;&#x2F;9.rarbg.to:2710&#x2F;announce,udp:&#x2F;&#x2F;9.rarbg.me:2710&#x2F;announce,udp:&#x2F;&#x2F;exodus.desync.com:6969&#x2F;announce,udp:&#x2F;&#x2F;tracker.cyberia.is:6969&#x2F;announce,udp:&#x2F;&#x2F;open.stealth.si:80&#x2F;announce,udp:&#x2F;&#x2F;tracker.sbsub.com:2710&#x2F;announce,udp:&#x2F;&#x2F;retracker.lanta-net.ru:2710&#x2F;announce,udp:&#x2F;&#x2F;tracker.tiny-vps.com:6969&#x2F;announce,udp:&#x2F;&#x2F;tracker.torrent.eu.org:451&#x2F;announce,udp:&#x2F;&#x2F;tracker.moeking.me:6969&#x2F;announce,udp:&#x2F;&#x2F;tracker3.itzmx.com:6961&#x2F;announce,http:&#x2F;&#x2F;tracker1.itzmx.com:8080&#x2F;announce,udp:&#x2F;&#x2F;ipv4.tracker.harry.lu:80&#x2F;announce,udp:&#x2F;&#x2F;bt2.archive.org:6969&#x2F;announce,udp:&#x2F;&#x2F;bt1.archive.org:6969&#x2F;announce,udp:&#x2F;&#x2F;explodie.org:6969&#x2F;announce,udp:&#x2F;&#x2F;www.loushao.net:8080&#x2F;announce,udp:&#x2F;&#x2F;valakas.rollo.dnsabr.com:2710&#x2F;announce</span><br><span class="line"></span><br><span class="line"># 后台挂起服务</span><br><span class="line">aria2c --cong-file&#x3D;&#x2F;$path -D</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="这些参数中有一条需要注意bt-tracker，它决定了你的初次下载速度。我的大致理解是：在进行BT-磁力链下载时，我们是需要先搜索并进入一个有资源的网络的，这个网络由很多节点组成。而我们在初次下载的时候，由于本地没有节点缓存，是需要重新搜索，因此速度很慢。添加bt-tracker可以让我们迅速的找到有资源的网络，会使我们的初次下载速度明显提快，我之前就吃了这个亏"><a href="#这些参数中有一条需要注意bt-tracker，它决定了你的初次下载速度。我的大致理解是：在进行BT-磁力链下载时，我们是需要先搜索并进入一个有资源的网络的，这个网络由很多节点组成。而我们在初次下载的时候，由于本地没有节点缓存，是需要重新搜索，因此速度很慢。添加bt-tracker可以让我们迅速的找到有资源的网络，会使我们的初次下载速度明显提快，我之前就吃了这个亏" class="headerlink" title="这些参数中有一条需要注意bt-tracker，它决定了你的初次下载速度。我的大致理解是：在进行BT/磁力链下载时，我们是需要先搜索并进入一个有资源的网络的，这个网络由很多节点组成。而我们在初次下载的时候，由于本地没有节点缓存，是需要重新搜索，因此速度很慢。添加bt-tracker可以让我们迅速的找到有资源的网络，会使我们的初次下载速度明显提快，我之前就吃了这个亏=__=^"></a>这些参数中有一条需要注意bt-tracker，它决定了你的初次下载速度。我的大致理解是：在进行BT/磁力链下载时，我们是需要先搜索并进入一个有资源的网络的，这个网络由很多节点组成。而我们在初次下载的时候，由于本地没有节点缓存，是需要重新搜索，因此速度很慢。添加bt-tracker可以让我们迅速的找到有资源的网络，会使我们的初次下载速度明显提快，我之前就吃了这个亏=__=^</h5><p>但是，我发现了几个问题：</p>
<ul>
<li>1 rpc调用不了：起初我是直接使用tcp映射，将6800映射到公网的某端口，然后我是用BaiduExporter，无法使用<a href="http://cn-fz-dx.sakurafrp.com:16811/jsonrpc来进行调用，目前还不知道为什么。" target="_blank" rel="noopener">http://cn-fz-dx.sakurafrp.com:16811/jsonrpc来进行调用，目前还不知道为什么。</a></li>
<li>2 我发现这个服务开启以后，只是一个服务，我是用命令行下载，如<code>aria2c 1.torrent</code>如果不指定目录的话-o  他的下载路径就在当前目录。</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>目前呢，我还是刚刚摸索会了一点，目前就是开多条命令下载，然后通过ftp取回本地，还无法做到远程rpc，实现真正离线下载。</p>
<p>路漫漫其修远兮，吾将上下而求索！<br>嘻嘻~</p>
<hr>
<p>以下为aria2 常用命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-o 指定下载目录</span><br><span class="line">#具体用法：yy是指重命名的文件名</span><br><span class="line">aria2c -o yy http:&#x2F;&#x2F;xx.com&#x2F;xx</span><br><span class="line"></span><br><span class="line">#使用aria2的分段和多线程下载功能可以加快文件的下载速度，对于下载大文件时特别有用。-x 分段下载，-s 多线程下载，如：</span><br><span class="line">aria2c -s 2 -x 2 http:&#x2F;&#x2F;xx.com&#x2F;xx</span><br><span class="line"></span><br><span class="line">#种子和磁力下载，注意要加&#39;&#39;，否则可能无法下载</span><br><span class="line">aria2c ‘xxx.torrnet‘</span><br><span class="line">aria2c &#39;磁力链接&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#单个文件最大下载速度：</span><br><span class="line">aria2c --max-download-limit&#x3D;300K -s10 -x10 &#39;http:&#x2F;&#x2F;xx.com&#x2F;xx&#39;</span><br><span class="line"></span><br><span class="line">#整体下载最大速度：</span><br><span class="line">aria2c --max-overall-download-limit&#x3D;300k -s10 -x10 &#39;http:&#x2F;&#x2F;xx.com&#x2F;xx&#39;</span><br></pre></td></tr></table></figure>
<p>另外有时候需要后台运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#screen or nohup</span><br><span class="line">nohub aria2c XXX &gt;out.log 2&gt;&amp;1 &amp;</span><br><span class="line">nohup aria2c XXX &gt;&amp;out.log &amp;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>离线下载</tag>
        <tag>折腾</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Note</title>
    <url>/2020/07/05/Git-Note/</url>
    <content><![CDATA[<h3 id="1-添加SSH-KEY"><a href="#1-添加SSH-KEY" class="headerlink" title="1.添加SSH KEY"></a>1.添加SSH KEY</h3><ul>
<li>按如下命令来生成 sshkey:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxxxx@xxxxx.com&quot;</span><br></pre></td></tr></table></figure>
按照提示完成三次回车，即可生成 ssh key。通过查看 ~/.ssh/id_rsa.pub 文件内容，获取到你的 public key</li>
</ul>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br><span class="line"># ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6eNtGpNGwstc....</span><br></pre></td></tr></table></figure>
<p>值得一提的是，一个公钥可以同时添加到Github或者gitee上面，不需要多个key</p>
<ul>
<li><p>在Github或者Gitee上添加公钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Gitee：复制生成后的 ssh key，点击头像--设置--SSH公钥（如图所示）添加生成的 public key</span><br><span class="line"></span><br><span class="line">Github：登录到GitHub，选择settings ，选择Add SSH key，把.pub的内容复制到里面即可。</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加后，在终端（Terminal）中输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br><span class="line"></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>首次使用需要确认并添加主机到本机SSH可信列表。若返回</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hi XXX! You&#39;ve successfully authenticated, but Gitee.com does not provide shell access.</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>则证明添加成功。</p>
<h3 id="2-git-clone"><a href="#2-git-clone" class="headerlink" title="2.git clone"></a>2.git clone</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：git clone [url]</span><br><span class="line"></span><br><span class="line">该命令可用于通过指定的URL获取一个代码库。</span><br></pre></td></tr></table></figure>


<h3 id="3-git-add"><a href="#3-git-add" class="headerlink" title="3.git add"></a>3.git add</h3><p>该命令可以将一个文件或者文件夹添加至stage(暂存区)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：git add [file] or [floder]</span><br></pre></td></tr></table></figure>
<p>一下命令可以将多个文件添加至stage(暂存区)。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add *</span><br><span class="line"></span><br><span class="line">git add all</span><br><span class="line"></span><br><span class="line">git add .</span><br></pre></td></tr></table></figure>



<h3 id="4-git-remote"><a href="#4-git-remote" class="headerlink" title="4.git remote"></a>4.git remote</h3><p>你可以通过该命令将本地的代码库连接到远程服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add [variable name] [Remote Server Link]</span><br></pre></td></tr></table></figure>
<p>值得注意的是：同一个本地repo，可以关联到多个远程repo，只需要多次添加就可以了。</p>
<p>eg：有一个本地仓库，我希望同时同步到github和gitee上去，此时我们可以按如下三步</p>
<ul>
<li><p>先删除已关联的名为origin的远程库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure>
</li>
<li><p>先后关联GitHub的远程库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add github git@github.com:loveXMTX&#x2F;demo.git</span><br><span class="line">git remote add gitee git@gitee.com:loveXMTX&#x2F;demo.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>列出详细信息，在每一个名字后面列出其远程url</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="5-git-commit"><a href="#5-git-commit" class="headerlink" title="5.git commit"></a>5.git commit</h3><p>该命令可以在版本历史记录中永久记录文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -m “[ Type in the commit message]”</span><br><span class="line"></span><br><span class="line">#怎么说呢，目前我还没有理解到这个commit的精髓</span><br></pre></td></tr></table></figure>
<h3 id="6-git-push-amp-git-pull"><a href="#6-git-push-amp-git-pull" class="headerlink" title="6.git push&amp; git pull"></a>6.git push&amp; git pull</h3><p>将主分支上提交的变更发送到远程代码库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：git push [variable name] master</span><br></pre></td></tr></table></figure>

<p>将所有分支发送到远程代码库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：git push –all [variable name]</span><br></pre></td></tr></table></figure>

<p>设置远程分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#origin&#x2F;remote_branch是你本地分支对应的远程分支；your_branch是你当前的本地分支。</span><br><span class="line">git branch --set-upstream-to&#x3D;origin&#x2F;remote_branch  your_branch</span><br></pre></td></tr></table></figure>

<p>该命令将获取远程服务器上的变更，并合并到你的工作目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用法：git pull [Repository Link]</span><br></pre></td></tr></table></figure>

<h3 id="7-git-config"><a href="#7-git-config" class="headerlink" title="7. git config"></a>7. git config</h3><p>在git中，我们使用git config 命令用来配置git的配置文件，git配置级别主要有以下3类：</p>
<ul>
<li><ol>
<li>仓库级别 local 【优先级最高】</li>
</ol>
<p>git 仓库级别对应的配置文件是当前仓库下的<code>.git/config</code> </p>
<blockquote>
<p>在当前目录下.git目录默认是隐藏的，所以在文件管理器中我们要打开显示以藏文件）</p>
</blockquote>
</li>
<li><p>2.用户级别 global【优先级次之】</p>
<p>git 用户级别对应的配置文件是用户宿主目录下的<code>~/.gitconfig</code> </p>
</li>
<li><p>3.系统级别 system【优先级最低】</p>
<p>git系统级别对应的配置文件是git安装目录下的 <code>/etc/gitconfig</code></p>
</li>
</ul>
<p>那么config配置文件中具体有什么东西呢？</p>
<p>你可以通过<code>git config -l</code>来查看</p>
<p>常用的命令</p>
<ul>
<li><p>git config -e 编辑配置文件 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># git config --local -e 编辑仓库级别配置文件</span><br><span class="line"># git config --global -e 编辑用户级别配置文件</span><br><span class="line"># git config --system -e 编辑系统级别配置文件</span><br></pre></td></tr></table></figure>
</li>
<li><p>git config 添加配置项目 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># git config --global user.email “you@example.com”</span><br><span class="line"># git config --global user.name “Your Name”</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="8-git-branch"><a href="#8-git-branch" class="headerlink" title="8.git branch"></a>8.git branch</h3><ul>
<li><p>创建分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch test #test为分支名</span><br></pre></td></tr></table></figure>
</li>
<li><p>切换分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout test</span><br></pre></td></tr></table></figure>
</li>
<li><p>将新分支推送到github</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin [branch name]</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#查看本地分支</span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line">#查看远程分支</span><br><span class="line">git branch -r</span><br><span class="line"></span><br><span class="line">#查看所有分支</span><br><span class="line">git branch -a</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#删除本地分支</span><br><span class="line">git branch -d [branch name]</span><br><span class="line"></span><br><span class="line">#删除github远程分支,分支名前的冒号代表删除。</span><br><span class="line">git push origin :[branch name]</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="回退到某个版本"><a href="#回退到某个版本" class="headerlink" title="回退到某个版本"></a>回退到某个版本</h3><ul>
<li><p>查看之前提交的记录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log</span><br><span class="line"></span><br><span class="line">commit 7efbc0bb4f42bc837027fe929f05d4148aff354e (HEAD -&gt; master, origin&#x2F;hexo)</span><br><span class="line">Merge: 8a3b11a 9113919</span><br><span class="line">Author: XXX</span><br><span class="line">Date:   XXX</span><br><span class="line">		commit信息（你自己注释的）</span><br><span class="line"></span><br><span class="line">commit 8a3b11a41b4c0c19fe6cf0a8a7443c86a43e8e5e</span><br><span class="line">Author: XXX</span><br><span class="line">Date:   XXX</span><br><span class="line"></span><br><span class="line">    Add YuanMa</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
</li>
<li><p>回到指定版本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard [你需要选择的版本信息]比如：7efbc0bb4f42bc837027fe929f05d4148aff354e</span><br></pre></td></tr></table></figure>
</li>
<li><p>强制提交</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -f origin master</span><br><span class="line"></span><br><span class="line">#如果提交不了，你可能需要先merge一下远程的分支 </span><br><span class="line">git pull [repo的别名] [远程的branch名称]</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="将本地的分支推送到远程的非master分支"><a href="#将本地的分支推送到远程的非master分支" class="headerlink" title="将本地的分支推送到远程的非master分支"></a>将本地的分支推送到远程的非master分支</h3><ul>
<li><p>在本地repo根目录下初始化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加远程repo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remoote add [repo别名--你自己取] [远程repo url]</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加到工作区</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add . #或者选择你需要添加的文件</span><br></pre></td></tr></table></figure>
</li>
<li><p>提交</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;你自己的注视，方便你自己记忆提交版本，以便你以后可能回退&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>推送</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#推送到master分支</span><br><span class="line">git push [repo别名] master</span><br><span class="line"></span><br><span class="line">#推送到非master分支</span><br><span class="line">git push [repo别名] master:[远程分支名]</span><br></pre></td></tr></table></figure>



</li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello MyBlog</title>
    <url>/2020/07/04/hello-MyBlog/</url>
    <content><![CDATA[<p>这篇文章就留下来纪念吧，本来最初搭建这个博客的目的是想梳理一下行测的知识点，想用一个托管比较方便的工具，后来还是折腾了一天。。。</p>
<a id="more"></a>

<h3 id="1-插入本地图片的方式"><a href="#1-插入本地图片的方式" class="headerlink" title="1.插入本地图片的方式"></a>1.插入本地图片的方式</h3><ul>
<li>使用官网建议的方式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#载入本地图片的方式，这里是官网的Demo，与一般的MarkDown格式不一致，我试过插件hexo-asset-image，在我的上面好像行不通，以后有空了再研究。</span><br><span class="line">&#123;% img [class names] &#x2F;path&#x2F;to&#x2F;image [width] [height] [title text [alt text]] %&#125;</span><br><span class="line"># 这个path是绝对路径，在hexo的根目录下的public下。</span><br><span class="line"></span><br><span class="line">#以下是我的测试Demo</span><br><span class="line">&#123;% img [test] &#x2F;photos&#x2F;1.jpg  %&#125;</span><br></pre></td></tr></table></figure>

<img src="/photos/1.jpg" class="[test]">

<ul>
<li><p>搭配Typora使用</p>
<p><a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a>是一款很简洁的markdown文档编辑器，实现了实时预览。</p>
<ol>
<li><p>在typora的偏好设置–图像中，插入图片时选择“复制到指定路径”，这里推荐相对路径，比如我的是</p>
<p><img src="/../../../../../../../../images/image-20200706211722327.png" alt="image-20200706211722327"></p>
</li>
<li><p>将截图复制到Typora中，此时图片保存在了本地，如图所示</p>
<p><img src="/../../../../../../../../images/image-20200706203250687.png" alt="image-20200706203250687"></p>
</li>
<li><p>设置typora-root-url</p>
<p>可以通过<code>./scaffolds/post.md</code>设置，</p>
<p><img src="/../../../../../../../../images/image-20200706212358599.png" alt="image-20200706212358599"></p>
<p>typora-root-url的意思是：声明一个在你的本地电脑中预览图片的URL前缀, 你可以在<a href="https://support.typora.io/Images/" target="_blank" rel="noopener">这里</a>找到更多细节。</p>
<p>比如，在YAML Front Matters中输入<code>typora-root-url: /Users/byp/Documents/gitDir/hexoBlog/source/</code>，那么<code>![alt](/blog/images/test.png)</code>在Typora中就会被识别为<code>![alt](file://typora-root-url: /Users/byp/Documents/gitDir/hexoBlog/source/images/test.png)</code></p>
<p>​    </p>
</li>
</ol>
<p>因此，如此设置后，直接drag或者粘贴到Typora中，会被存储于<code>/Users/byp/Documents/gitDir/hexoBlog/source/images/</code>中，而由于我们设置了<code>typora-root-url: /Users/byp/Documents/gitDir/hexoBlog/source/</code>，所以他可以被解析为<code>/images/test.jpg</code>，且Hexo会将<code>./source/images/</code>发布到<code>./public/images/</code>，因此在网页上加载也没有任何问题。</p>
</li>
</ul>
<h3 id="2-模版文件"><a href="#2-模版文件" class="headerlink" title="2.模版文件"></a>2.模版文件</h3><ul>
<li><p>文件夹<code>./scaffolds/</code></p>
<p><img src="/../../../../../../../../images/image-20200706202112458.png" alt="image-20200706202112458"></p>
</li>
</ul>
<p>包含三份模版文件，当你使用<code>hexo new “blog_document”</code>，会以他们为模版</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">draft.md</span><br><span class="line"></span><br><span class="line">page.md</span><br><span class="line"></span><br><span class="line">post.md</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>行测--资料分析</title>
    <url>/2020/07/07/%E8%A1%8C%E6%B5%8B-%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>资料分析一直是行测考试中较为重要的一个模块，个人认为是 <strong>得分稳</strong>、<strong>分值高</strong>、<strong>性价比高</strong>的模块。</p>
<p>最近，由于复习进入<strong>“深水区”</strong>，特地重新梳理一下资料分析的知识点。</p>
<h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><blockquote>
<ol>
<li>如何快速查找数据？</li>
<li>速算技巧</li>
<li>考点整理</li>
<li>易错知识点</li>
</ol>
</blockquote>
<a id="more"></a>

<h3 id="1-如何快速查找数据？"><a href="#1-如何快速查找数据？" class="headerlink" title="1.如何快速查找数据？"></a>1.如何快速查找数据？</h3><p>资料分析分数取决于速度、正确率，你需要在单位时间内获得最高的分值。因此，数据查找至关重要。</p>
<ul>
<li><p>剖析题干</p>
<p>你需要把握题干中的三个基本点：<strong>时间、主体、考点</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">【2019 联考】2016年山东、广东和河南三省出生人口之和占当年全国出生人口的比重约为：</span><br><span class="line"></span><br><span class="line">A 21%</span><br><span class="line">B 25%</span><br><span class="line">C 28%</span><br><span class="line">D 31%</span><br></pre></td></tr></table></figure>

<p>你可以圈出 <strong><em>2016年</em></strong>、 <strong><em>广东和河南三省出生人口之和</em></strong>、<strong><em>占（比重问题）</em></strong></p>
</li>
<li><p>在题目中查找</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> <strong>文字材料</strong>：预留10s-20s来略读一下全文，了解每段在讲些什么东西，比如第一段讲去年往年、第二段将省份之类的。</li>
<li><input checked="" disabled="" type="checkbox"> <strong>图形材料</strong>：需特别注意标题、单位、图例、注释，（扇形图，一般是从0度向360度方向顺时针排列）</li>
<li><input checked="" disabled="" type="checkbox"> <strong>表格材料</strong>：需特别注意标题、时间、单位、横纵目录</li>
</ul>
</li>
</ul>
<h3 id="速算技巧"><a href="#速算技巧" class="headerlink" title="速算技巧"></a>速算技巧</h3><ul>
<li><p>截位直除</p>
</li>
<li><p>分子分母比较法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A&#x2F;(1+r)&#x3D;A*(1+r) # 当r&lt;5%</span><br></pre></td></tr></table></figure>
</li>
<li><p>A * a%  </p>
<p>将a% 拆分称常用的1/2 ,1/4之类的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">945 * 44.2% &#x3D; 945 * 40% + 945 * 4% + 945 * 0.2%</span><br><span class="line"></span><br><span class="line">或者 &#x3D;945 * 4&#x2F;9</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>多位数求和</p>
<ul>
<li>四舍五入（取前两位）</li>
<li>基准法（找一个基准数）适用于数据波动较小</li>
<li>尾数法（适用于精确计算）</li>
</ul>
</li>
<li><p>比重计算（特殊）</p>
<p>比重靠近100%时，用1-a来计算</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3927&#x2F;4041 &#x3D; 1 -110&#x2F;4041 &#x3D; 1 - 2.x% &#x3D; 97.x% 选A</span><br><span class="line"></span><br><span class="line">A 97%</span><br><span class="line">B 99%</span><br></pre></td></tr></table></figure>
</li>
<li><p>特殊题型 <code>A * a% - B * b%</code>当A与B非常大的时候</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">134735 * 9.1% - 134091 * 8.9%</span><br><span class="line"></span><br><span class="line">A 124</span><br><span class="line">B 249</span><br><span class="line">C 327</span><br><span class="line">D 467</span><br><span class="line"></span><br><span class="line">&#x3D; 134735 * (9.1% - 8.9%) - (134091 - 134735) * 8.9%</span><br><span class="line">&#x3D; 134735 * 0.2% + 644 * 8.9%</span><br><span class="line">&#x3D; 269.x + 57.x &#x3D; 326.x  选C</span><br></pre></td></tr></table></figure>

<p>不能直接化成分数计算，不然结果误差很大</p>
</li>
</ul>
<h3 id="知识点汇总"><a href="#知识点汇总" class="headerlink" title="知识点汇总"></a>知识点汇总</h3><ul>
<li><p>隔年增长率</p>
<ul>
<li>隔年倍数</li>
<li>隔年基期量</li>
<li>逆向运用</li>
</ul>
</li>
<li><p>合成增长率</p>
<p>十字交叉法：值得注意的是，十字交叉法本来得到的是基期，只不过我们经常用近似值，现期量来替代。</p>
</li>
<li><p>年均增长率</p>
<ul>
<li><p>编数法</p>
<blockquote>
<p>编造每一年的值，尽量分布得均匀一些、方便自己计算，然后计算每一年的增长率，最后再求平均值</p>
<p>—–公考齐麟</p>
</blockquote>
<p>例如：已知2010的基期产量为1000亿，2015年的现期产量为2000亿，求这五年的年均增长率。</p>
<p>此时假设2011-2014每年的产量如下表所示：</p>
<table>
<thead>
<tr>
<th>2010</th>
<th>2011</th>
<th>2012</th>
<th>2013</th>
<th>2014</th>
<th>2015</th>
</tr>
</thead>
<tbody><tr>
<td>1000</td>
<td>1200</td>
<td>1400</td>
<td>1600</td>
<td>1800</td>
<td>2000</td>
</tr>
</tbody></table>
<p>计算每一年的增长率，以A表示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A2011&#x3D;(1200-1000)&#x2F;1000&#x3D;0.2</span><br><span class="line">A2012&#x3D;(1400-1200)&#x2F;1200&#x3D;0.167</span><br><span class="line">A2013&#x3D;0.143</span><br><span class="line">A2014&#x3D;0.125</span><br><span class="line">A2015&#x3D;0.111</span><br></pre></td></tr></table></figure>

<p>那么年均增长率</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A&#x3D;(0.2+0.167+0.143+0.125+0.111)&#x2F;5&#x3D;15.6%</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>平均增长率</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(a-b)&#x2F;(1-b)</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>比重增长率</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A&#x2F;B * (a-b)&#x2F;(1+a)</span><br></pre></td></tr></table></figure>

<ul>
<li><p>a&gt;b ，比重比上年⬆️</p>
</li>
<li><p>a&lt;b，比重比上年⬇️</p>
</li>
<li><p>逆向运用</p>
</li>
<li><p>通常比重的变化量&lt;&lt; (a-b)</p>
</li>
<li><p>注意与基期公式结合<code>A/B * (1+b)/(1+a)</code></p>
</li>
</ul>
</li>
<li><p>综合分析错略</p>
<ul>
<li>倒序验证</li>
<li>某个选项太难直接跳过（其实可以优先考虑题干短的、现期的）</li>
<li>确定某个选项对了直接跳过</li>
</ul>
</li>
</ul>
<h3 id="易错知识点"><a href="#易错知识点" class="headerlink" title="易错知识点"></a>易错知识点</h3><ul>
<li>增幅、降幅、变化幅度</li>
<li>A是B的多少倍 ，A 比B 高、多、增长多少倍（-1）</li>
<li>时间段不完全一致 （例如：图表比题干的时间段多几个月）</li>
<li>不到、约、近、超过、XX多（XX余）</li>
<li>量级 （特别是综合分析中）</li>
</ul>
<hr>
<p>先写这么多吧，以后错题有补充的再添加！</p>
]]></content>
      <categories>
        <category>公考</category>
      </categories>
      <tags>
        <tag>行测</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac原生挂载ntfs的方法</title>
    <url>/2020/07/07/Mac%E5%8E%9F%E7%94%9F%E6%8C%82%E8%BD%BDntfs%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>相信很多小伙伴会遇到这样一个问题：在Mac下如何挂载NTFS硬盘？</p>
<p>一般你可以通过第三方软件 NTFS For Mac 或者 Mounty来完成，但每次弹窗点来点去会有些麻烦，而且有些时候由于硬盘非正常退出，你需要在Windows下进行安全退出才能挂载。</p>
<p>由于以上种种，我选择了使用Mac原生挂载的方式，一劳永逸！</p>
<a id="more"></a>

<h3 id="流程摘要"><a href="#流程摘要" class="headerlink" title="流程摘要"></a>流程摘要</h3><blockquote>
<ol>
<li>挂载上NTFS硬盘，查看硬盘名称</li>
<li>编辑/etc/fstab文件，使其支持NTFS写入</li>
<li>将/Volumes中的NTFS磁盘快捷方式到Finder</li>
</ol>
</blockquote>
<h3 id="详细流程"><a href="#详细流程" class="headerlink" title="详细流程"></a>详细流程</h3><ul>
<li><p>插上硬盘后，查看硬盘名称</p>
<ol>
<li><p>一般我们可以通过打开应用程序里的终端, 或者直接spotlight输入terminal打开。</p>
</li>
<li><p>输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#列出所有磁盘分区，其中&#x2F;dev&#x2F;disk_n就是你的硬盘，通常0是自己的本地Mac安装盘</span><br><span class="line"></span><br><span class="line">byp@Byps-Mac-mini hexoBlog % diskutil list </span><br><span class="line">&#x2F;dev&#x2F;disk0 (internal, physical):</span><br><span class="line">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class="line">   0:      GUID_partition_scheme                        *1.0 TB     disk0</span><br><span class="line">                  256.1 GB   disk1s1</span><br><span class="line"></span><br><span class="line">.........此处省略</span><br><span class="line"></span><br><span class="line">&#x2F;dev&#x2F;disk3 (external, physical):</span><br><span class="line">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class="line">   0:     FDisk_partition_scheme                        *500.1 GB   disk3</span><br><span class="line">   1:               Windows_NTFS XMTX                    500.1 GB   disk3s1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看硬盘，通常情况下硬盘会被挂载在&#x2F;Volumes&#x2F;目录下</span><br><span class="line">byp@Byps-Mac-mini hexoBlog % ls &#x2F;Volumes&#x2F;</span><br><span class="line">MAC 1		Mac		Untitled	XMTX</span><br></pre></td></tr></table></figure>
</li>
<li><p>记住我们要挂载硬盘的名字，比如我的是XMTX。</p>
</li>
</ol>
</li>
</ul>
<ul>
<li><p>编辑/etc/fstab文件，使其支持NTFS写入</p>
<p>你可以通过终端或者文本编辑器完成</p>
<ol>
<li>通过终端命令编辑</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure>

<p>你将会看到了一个编辑界面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 输入以下内容</span><br><span class="line">LABEL&#x3D;XMTX none ntfs rw,auto,nobrowse</span><br><span class="line"></span><br><span class="line"># 之后敲击回车，再Ctrl+X，再敲击Y，再敲击回车</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>通过文本编辑器编辑<img src="/../../../../../../../../images/image-20200707113429637.png" alt="image-20200707113429637"></li>
</ol>
</li>
<li><p>将/Volumes中的NTFS磁盘快捷方式到Finder</p>
<p>此时，退出你的移动硬盘，再重新插入，你会发现磁盘没有显示再桌面或是Finder之前出现的地方，别慌</p>
<ol>
<li><p>打开Finder，Command+Shift+G，输入框中输入<code>/Volumes</code>，回车，你就可以看到你的磁盘啦！是可以读写的哟～</p>
</li>
<li><p>方便起见，你可以直接把磁盘拖到Finder侧边栏中，这样下次使用就不用进入到/Volumes目录打开了</p>
<p><img src="/../../../../../../../../images/image-20200707114324737.png" alt="image-20200707114324737"></p>
</li>
<li><p>或者你也可以设置软链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建软链接，可以理解为快捷方式，这里我们设置到桌面上</span><br><span class="line">ln -s &#x2F;Volumes&#x2F;XMTX&#x2F; ~&#x2F;Desktop&#x2F;XMTX</span><br></pre></td></tr></table></figure>

<p><img src="/../../../../../../../../images/image-20200707112614637.png" alt="Demo图"></p>
</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
</search>
